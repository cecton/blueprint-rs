name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: rustfmt
      if: ${{ github.event_name == 'pull_request' }}
      run: rustfmt --check **/*.rs
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features -- -D warnings
    - name: Run tests (with all features, including "doc")
      run: cargo test --all-features --verbose
    - name: Rustdoc (without feature "doc")
      run: cargo doc --verbose

  wasm-size:

    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
    - name: Install wasm-pack
      run: |
        curl -sSL https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1/wasm-pack-v0.9.1-x86_64-unknown-linux-musl.tar.gz \
          | tar xzO wasm-pack-v0.9.1-x86_64-unknown-linux-musl/wasm-pack \
          > $HOME/.cargo/bin/wasm-pack
        chmod +x $HOME/.cargo/bin/wasm-pack
    - uses: actions/checkout@v2
    - name: Build (release)
      run: "./build.sh --release && du -h public/wasm_bg.wasm >> output"
    - name: Checkout main
      run: git checkout main
    - name: Build (release)
      run: "./build.sh --release && du -h public/wasm_bg.wasm >> output"
    - name: Comment results
      uses: amn41/comment-on-pr@comment-file-contents
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: output
